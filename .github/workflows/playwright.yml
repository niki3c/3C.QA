name: Playwright Tests with Allure Reporting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-playwright
        pip install python-dotenv allure-pytest  # Install Allure for Pytest
        playwright install

    - name: Set up Playwright browsers
      uses: microsoft/playwright-github-action@v1

    - name: Create traces directory
      run: mkdir -p traces/

    - name: Run Playwright tests with Allure reporting
      run: |
        export PYTHONPATH=$(pwd)
        pytest 3c_Manager/tests/login_pg_reset_password_test.py --alluredir=allure-results
      env:
        PLAYWRIGHT_TRACE_DIR: traces/
        STAGE_MANAGER_LOGIN_URL: ${{ secrets.STAGE_MANAGER_LOGIN_URL }}
        BROWSER: "chromium"  # Make sure this matches the test configuration

    # Add a step to upload allure-results as an artifact for further analysis
    - name: Upload Allure results
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: allure-results/
        retention-days: 14

    - name: Set up Allure command line
      run: |
        npm install -g allure-commandline --save-dev
        allure generate allure-results --clean -o allure-report

    # Upload the allure-report for access after the pipeline run
    - name: Upload Allure report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report/
        retention-days: 14

    # Optionally, you can also print the Allure report URL or display it
    - name: Serve Allure report URL (optional)
      run: echo "Allure report is uploaded and available for download."
